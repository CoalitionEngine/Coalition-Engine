Outline shader for text, sprites and surfaces.
	--by Krug.


//==============================================================//
//					       IMPORTANT                            //
//==============================================================//

Before using the system, be aware of the following things:

>> When using the outline_set_text() functions, YOU *MUST* set a 
different font from the default Gamemaker font before the function 
is executed.

>> In order for the outline functions to work correctly, the option
"Automatically Crop" must be off for the Texture Group it belongs
to. Go to Tools > Texture Groups and uncheck the "Automatically Crop" box.

>> Remember that the outline is drawn within the boundaries
of the sprite. At least 1 pixel of space is required between the
drawing and the edge of the canvas.

>> In the outline_create_sprite functions, it is not possible to
change the resolution, as this would directly increase the sprite
scale.



//==============================================================//
//                       HOW TO USE IT                          //
//==============================================================//

There are three types of outline function, each with its recommended use.

>> outline_set:
---------------
	Start the shader with the corresponding settings to the target 
	of the function (text, sprite or surface). After call it, all 
	draw functions will have the outline applied.
				
	Exemple:
	>>DRAW EVENT<<
				
		|	draw_set_font(fnt_myfont);
		|	outline_set_text();
		|	draw_text(x, y, "This text has an outline! :D");
		|	outline_end();
					
	Note that this type does not automatically reset the shader, so
	the outline_end(); function must be called after drawing the
	targets.
						
				
>> outline_draw:
----------------
	Unlike outline_set, this type draws the target
	only once and then resets the shader. ideal for
	targets drawn only once.
				 
	Exemple:
	>>DRAW EVENT<< 
	
		|	draw_set_font(fnt_myfont);
		|	outline_draw_text(x, y, "This text has an outline! :D", color, alpha, scale, ang);

	
>> outline_create_sprite:
-------------------------
	This type of function can be called only once and returns 
	a sprite baked with the	outline, which can be kept during
	the game. Ideal for large targets/thick outlines that do
	not change during the game.
	
	Exemple:
	>>CREATE EVENT<<
	
		|	spr_outlined_sprite = outline_create_sprite(spr_mysprite, subimg, color, alpha);
		
	>>DRAW EVENT<<
	
		|	draw_sprite(x, y, spr_outlined_sprite);



//==============================================================//
//                        ARGUMENTS TYPES                       //
//==============================================================//

All the argument types and descriptions can be founded on the 
JSDoc Reader of the functions, bur here is an more detailed
description:

> line_width - The thickness, in pixels, of the outline.
			   *IMPORTANT!!* High values used in big sprites with
			   a lot of transparent space can cause considerable 
			   performance loss.
			  
> line_col - The color of the outline

> line_alpha - The alpha of the outline
		   
> tolerance - The minimum alpha value a pixel need to become an outline.

> resolution - The resolution of the outline. The default is one
			   pixel. 
			   *IMPORTANT!!* This value can cause heavy impact on
			   performance. Start with 1 and slowly increase at 
			   integer values.
			   
> roundness - The roundess factor of the outline. 1.0 is circular,
			  0.0 is square.

> uv_bound - Locks the shader on the sprite uv. Prevent the outline
			 from reaching other sprites on the texture page. Set to
			 false if you wanto to enable the outline for sprites not
			 specified in the function.



//==============================================================//
//                           TIPS                               //
//==============================================================//

>> Sprite and surface functions returns the index of the used
sprite, so you can use it as a pointer to the sprite/surface when
drawing them.

>> When using low resolution sprites, you can have better control
of the thickness by increasing the precision (8.0 seems like a 
good value) and leaving the roundess at 0.0.

>> A roundness value of 0.0 can create the "full" outline effect,
while anything greater create que "side only" outline effect.

>> When leaving the thickness as a negative value, it is possible
to create the "inline" effect.

>> If the arguments of the outline function are not filled, it
will use the default values. Such values can be edited by the
__OUTLINE_OPTIONAL_ARGS macro found at the beginning of the 
scr_outline script.



//==============================================================//
//                   THANK YOU FOR USING IT ;)                  //
//       Don't forget to leave a feedback on tha page :D        //
//==============================================================//



